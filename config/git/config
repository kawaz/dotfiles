[user]
	name = Yoshiaki Kawazu
	email = kawazzz@gmail.com
	useConfigOnly = true
[color]
	ui = auto
[log]
	date = iso
[alias]
	st = status
	co = checkout
	tr = log --graph --pretty='format:%C(yellow)%h%Creset %C(magenta)%cd%Creset %s %Cgreen(%an)%Creset %Cred%d%Creset'
	tr-all = log --graph --pretty='format:%C(yellow)%h%Creset %C(magenta)%cd%Creset %s %Cgreen(%an)%Creset %Cred%d%Creset' --all
	add-no-whitespace = !bash -c 'git diff -U0 -w --no-color "$@" | git apply --cached --ignore-whitespace --unidiff-zero -'
	# hub
	pr = pull-request
	open = browse
  get = !"ghq get"
	# see config/git/hooks/log.sh
	hooks-log = !"ls -rt \"${TMPDIR:-/tmp}\"/git-hooks-log.[0-6]|while read -r f;do [[ -f $f ]] && cat \"$f\";done"
[core]
	autocrlf = input
[pager]
	log = (diff-highlight 2>/dev/null || cat) | ${PAGER:-less}
	show = (diff-highlight 2>/dev/null || cat) | ${PAGER:-less}
	diff = (diff-highlight 2>/dev/null || cat) | ${PAGER:-less}
[interactive]
	diffFilter = (diff-highlight 2>/dev/null || cat)
[diff]
	compactionHeuristic = true
	indentHeuristic = true
[merge]
	ff = false
[pull]
	ff = only
[push]
	default = current
[rebase]
	# rebase時に作業中のファイルがあればでその前後で stash / stash pop を自動で実行させる。これは pull にも効く。
	autostash = true
	# --fixupとか--squashされたcommitがrebase -iの時に自動でsquashされるようにする
	autosquash = true
[github]
	user = kawaz
[tig "bind"]
	generic = g move-first-line
	generic = G move-last-line
[url "git@github.com:"]
	pushinsteadof = "git://github.com/"
	pushinsteadof = "https://github.com/"
[url "git@bitbucket.org:"]
	insteadof = "https://bitbucket.org/"

[include]
	# 絶対パス表記が必要な設定などの設定用 (e.g. core.hooksPath)
	path = ../../cache/gitconfig.local

# sourcetree
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true

# filters
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process
[filter "plist"]
  textconv = plutil -convert xml1 -o -
[filter "config_npm_config"]
	clean = grep -v '/:_authToken='
	smudge = cat
[filter "config_hub"]
	clean = perl -pe 's/^(\\s+oauth_token\\s*:\\s*).*/$1SECRET_TOKEN/'
	smudge = cat
[filter "config_gh_hosts"]
	clean = perl -pe 's/^(.*\\s*oauth_token\\s*:).*/$1 SECRET_TOKEN/'
	smudge = cat
[filter "config_rclone"]
  clean = perl -pe 's/^([\\s\\W]*(client_id|client_secret|token)\\s*=).*/$1 SECRET/'
	smudge = cat
[init]
	defaultBranch = default
